package io.johnvincent.gomoku.library.rates;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

@JsonPropertyOrder({ "lethal1", "lethal2", "lethal3", "forcingWin2", "forcingWin3", "forcingMove1", "forcingMove2", "lethal", "forcing" })
@JsonIgnoreProperties(value = { "useful" })
public class SummaryRatesItem {

	private int lethal1 = 0;
	private int lethal2 = 0;
	private int lethal3 = 0;

	private int forcingWin2 = 0;
	private int forcingWin3 = 0;

	private int forcingMove1 = 0;
	private int forcingMove2 = 0;

	public SummaryRatesItem() {}

	public boolean isUseful() {
		return isLethal() || isForcingMove() || isForcingWin();
	}
	
	public boolean isLethal() {
		if (lethal1 > 0) return true;
		if (lethal2 > 0) return true;
		if (lethal3 > 0) return true;
		return false;
	}

	public boolean isForcingWin() {
		if (forcingWin2 > 0) return true;
		if (forcingWin3 > 0) return true;
		return false;
	}
	
	public boolean isForcingMove() {
		if (forcingMove1 > 0) return true;
		if (forcingMove2 > 0) return true;
		return false;
	}

	public void add(SummaryRatesItem item) {
		if (item == null) return;
		
		this.lethal1 += item.lethal1;
		this.lethal2 += item.lethal2;
		this.lethal3 += item.lethal3;

		this.forcingWin2 += item.forcingWin2;
		this.forcingWin3 += item.forcingWin3;

		this.forcingMove1 += item.forcingMove1;
		this.forcingMove2 += item.forcingMove2;
	}

	public void add(SpecialCaseRatesItem item) {
		if (item == null) return;

		int lethal = item.getLethal();
		if (lethal == 1) this.lethal1++;
		if (lethal == 2) this.lethal2++;
		if (lethal == 3) this.lethal3++;

		int forcingWin = item.getForcingWin();
		if (forcingWin == 2) this.forcingWin2++;
		if (forcingWin == 3) this.forcingWin3++;	

		int forcingMove = item.getForcingMove();
		if (forcingMove == 1) this.forcingMove1++;
		if (forcingMove == 2) this.forcingMove2++;
	}

	public void add(GroupRatesItem item) {
		if (item == null) return;

		int lethal = item.getLethal();
		if (lethal == 1) this.lethal1++;
		if (lethal == 2) this.lethal2++;
		if (lethal == 3) this.lethal3++;

		int forcingWin = item.getForcingWin();
		if (forcingWin == 2) this.forcingWin2++;
		if (forcingWin == 3) this.forcingWin3++;	

		int forcingMove = item.getForcingMove();
		if (forcingMove == 1) this.forcingMove1++;
		if (forcingMove == 2) this.forcingMove2++;
	}
	
	public void add(ActualRatesItem item) {
		if (item == null) return;

		if (! item.isAlwaysUsed())
			System.out.println("SummaryRatesItem; ActualRatesItem "+item);
		int lethal = item.getLethal();
		if (lethal == 1) this.lethal1++;
		if (lethal == 2) this.lethal2++;
		if (lethal == 3) this.lethal3++;

		int forcingWin = item.getForcingWin();
//		if (forcingWin == 2) this.forcingWin2++;
		if (forcingWin == 2 && item.isAlwaysUsed()) this.forcingWin2++;
		if (forcingWin == 3) this.forcingWin3++;

		int forcingMove = item.getForcingMove();
		if (forcingMove == 1) this.forcingMove1++;
		if (forcingMove == 2) this.forcingMove2++;
	}

	public int getLethal1() {return lethal1;}
	public int getLethal2() {return lethal2;}
	public int getLethal3() {return lethal3;}

	public int getForcingWin2() {return forcingWin2;}
	public int getForcingWin3() {return forcingWin3;}

	public int getForcingMove1() {return forcingMove1;}
	public int getForcingMove2() {return forcingMove2;}

	public String toString() {
		return "(L1="+getLethal1()+",L2="+getLethal2()+",L3="+getLethal3()+
				",FW2="+getForcingWin2()+",FW3="+getForcingWin3()+
				",FM1="+getForcingMove1()+",FM2="+getForcingMove2()+")";
	}
}
