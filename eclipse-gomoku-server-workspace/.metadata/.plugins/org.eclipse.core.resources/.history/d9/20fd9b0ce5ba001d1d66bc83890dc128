
package io.johnvincent.gomoku.library.rates;

import java.util.HashMap;
import java.util.Map;

import com.fasterxml.jackson.annotation.JsonProperty;

public class ActualCollection {

	@JsonProperty("map")
	private Map<String, ActualRatesItem> m_map = new HashMap<String, ActualRatesItem>();

	private static String createActualRatesKey(int before, int actual, int after) { return "A_" + before + "_" + actual + "_" + after; }

	public void add(int before, int actual, int after, int rate) {
		String key = createActualRatesKey(before, actual, after);
		m_map.put(key, new ActualRatesItem (key, before, actual, after, rate));
	}

	public void add(int before, int actual, int after, int rate, PlayerFlagsItem currentPlayerFlagsItem) {
		String key = createActualRatesKey(before, actual, after);
		m_map.put(key, new ActualRatesItem (key, before, actual, after, rate, currentPlayerFlagsItem));
	}

	public void add(int before, int actual, int after, int rate, PlayerFlagsItem currentPlayerFlagsItem, PlayerFlagsItem otherPlayerFlagsItem) {
		String key = createActualRatesKey(before, actual, after);
		m_map.put(key, new ActualRatesItem (key, before, actual, after, rate, currentPlayerFlagsItem, otherPlayerFlagsItem));
	}

	public ActualRatesItem get(final int beforeActual, final int actual, final int afterActual) {
		assert beforeActual >= 0;
		assert actual >= 0;
		assert afterActual >= 0;
		
		int num1 = beforeActual > 2 ? 2 : beforeActual;
		int num2 = actual;
		int num3 = afterActual > 2 ? 2 : afterActual;
		if (actual >= 5) {		// only one entry in catalog as before and after do not matter.
			num2 = 5;
			num1 = 0;
			num3 = 0;
		}
		return m_map.get(createActualRatesKey(num1, num2, num3));
	}
}
