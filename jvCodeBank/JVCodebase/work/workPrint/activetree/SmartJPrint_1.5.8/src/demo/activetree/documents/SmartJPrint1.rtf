{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f16\fnil\fcharset0\fprq0{\*\panose 00000000000000000000}Monospaced;}{\f17\fnil\fcharset0\fprq0{\*\panose 00000000000000000000}Dialog;}{\f126\froman\fcharset238\fprq2 Times New Roman CE;}{\f127\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f129\froman\fcharset161\fprq2 Times New Roman Greek;}{\f130\froman\fcharset162\fprq2 Times New Roman Tur;}{\f131\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f132\fswiss\fcharset238\fprq2 Arial CE;}{\f133\fswiss\fcharset204\fprq2 Arial Cyr;}
{\f135\fswiss\fcharset161\fprq2 Arial Greek;}{\f136\fswiss\fcharset162\fprq2 Arial Tur;}{\f137\fswiss\fcharset186\fprq2 Arial Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;
\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\adjustright \f16 \sbasedon16 \snext15 default1;}{\s16\nowidctlpar\adjustright \f16 \sbasedon18 \snext16 default;}{\*\cs17 
\additive \i \sbasedon10 Emphasis;}{\s18\nowidctlpar\adjustright \f17\cf1 \sbasedon19 \snext18 default3;}{\s19\nowidctlpar\adjustright \f16 \snext19 default2;}}{\info{\author Dipak Roy}{\operator Dipak Roy}{\creatim\yr2004\mo8\dy15\hr12\min46}
{\revtim\yr2004\mo8\dy16\hr1\min13}{\version7}{\edmins6}{\nofpages2}{\nofwords389}{\nofchars2219}{\*\company Dell Computer Corporation}{\nofcharsws0}{\vern113}}\widowctrl\ftnbj\aenddoc\hyphcaps0\viewkind4\viewscale100 \fet0\sectd \linex0\sectdefaultcl 
{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s15\nowidctlpar\adjustright \f16 {\f0\cf9 
\par }{\b\f1\fs28\cf9 Generate PDF Documents using - Smart JPrint}{\b\f1\fs40\cf9 
\par }{\f1\cf1 
\par }{\f0\cf1 -  Use for (i) Printing, (ii) PDF generation, and (iii) Previewing of Java program output.
\par -  100% Java classes needs no other software.
\par -  For both J2EE server as well as Java Swing GUI programs. 
\par -  Add Styled Text, Images, JTable, JTextComponent together to produce single report.
\par -  J2EE output and Swing classes are automatically formatted to generate the using
\par    sophisticated text and image breaking algorithm.  
\par -  Print/Preview/PDF }{\cs17\f0\cf1 any}{\f0\cf1  swing components such as JTable, JTextArea, JEditorPane, 
\par    JTextPane, JTextComponent, Component in a minute.
\par -  Dynamically output your Java/J2EE program output as a PDF document for viewing 
\par    in the browser client or saving in the file system. 
\par -  Automatically print output pages to a server connected network printer. 
\par -  Use its wonderful preview option for allowing users to preview pages in an UI 
\par    before print/PDF the output. Output pages are automatically generated.}{\f0\fs22\cf1  }{\i\f1\cf1 
\par 
\par }{\b\f1\fs28\cf9 Generate PDF from your J2EE Server Applications
\par }{\f1\cf1 
\par }{\f0\cf1 Deploy the SmartJPrint APIs to generate PDF files from your J2EE server. Let your 
\par J2EE program write styled text, icons, and 2D graphics using the Smart JPrint 
\par APIs. You can then have options to generate a "Adobe Acrobat" readable PDF 
\par document as a file, or print the output to a printer. Design your PDF forms using the 
\par text, icons, and 2D graphics. Look at the examples to find out how simple it is to do all 
\par of these from your Java program.}{\f1\cf1 
\par 
\par }{\b\f1\fs28\cf9 Generate PDF from your Java GUI Swing components
\par }{\f1\cf1 
\par }{\f0\cf1 Java GUI application can generate the output to a PDF document from a GUI 
\par component such as tables (using JTable), text data (from JTextArea, JTextPane,
\par JEditorPane, or any kind of JTextComponent) and images. The SmartJ printing 
\par APIs automatically prints these components by breaking them into rows and 
\par columns and pages as appropriate.
\par }{\f1\cf1 
\par }{\b\f1\fs28\cf9 Print and/or Preview
\par }{\f1\cf1 
\par }{\f0\cf1 Smart JPrint APIs are very flexible and allows you to either print the output to a printer, 
\par preview the output using a GUI preview window, and/or send the output to write as a 
\par PDF document. Therefore, you can generate PDF files or create hard copies of the 
\par output by printing it to a printer. For a GUI based program, you can preview the output
\par and then you can select page(s) to print or generate PDF documents.
\par 
\par }{\b\f1\fs28\cf9 Generate TIFF (Fax sending/viewing), JPEG, and PNG images}{\f1\cf1 
\par 
\par Use Smart JPrint to generate multi page TIFF documents used for 
\par communicating as a FAX document. You can generate JPEG and PNG 
\par images for each page of the Smart JPrint produced output.
\par 
\par }{\b\f1\fs28\cf9 Downloads and details?
\par }{\f1\cf1 
\par }{\f0\cf1 You might check at out web site }{\i\f0\cf1 http://www.activetree.com}{\f0\cf1  for the details of the 
\par products, features, and downloads. View the Javadoc, tutorial, FAQs online to
\par learn more about Smart JPrint. Please feel free to ask a question to us at 
\par support@activetree.com.}{\f17\cf1 
\par }}